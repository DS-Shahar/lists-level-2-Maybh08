import java.util.*;

public class List2 {
	 public static void main(String[] args) {
	        List<Integer> list1 = Arrays.asList(1, 3, 5, 7);
	        List<Integer> list2 = Arrays.asList(2, 4, 6, 8);

	       
	        List<Integer> result = mergeSorted(list1, list2);
	        System.out.println(result);  
	        
	        List<Integer> list = new ArrayList<>(Arrays.asList(7, 1, 5, 3, 9, 2));
	        
	        List<Integer> sortedList = secondWay(list);
	        List<Integer> selectionSort = secondWay(list);

	        System.out.println(selectionSort);
	        System.out.println(sortedList);
	        
	    }


    public static List<Integer> mergeSorted(List<Integer> list1, List<Integer> list2) {
        List<Integer> merged = new ArrayList<>();
        int i = 0, j = 0;
        while (i < list1.size() && j < list2.size()) {
            if (list1.get(i) <= list2.get(j)) {
                merged.add(list1.get(i));
                i++;
            } else {
                merged.add(list2.get(j));
                j++;
            }
        }

        while (i < list1.size()) {
            merged.add(list1.get(i));
            i++;
        }

        while (j < list2.size()) {
            merged.add(list2.get(j));
            j++;
        }

        return merged;
    }
    
    public static List<Integer> selectionSort(List<Integer> list) {
        List<Integer> sortedList = new ArrayList<>();
        
        while (!list.isEmpty()) {
            int min = Collections.min(list);
            sortedList.add(min);
            list.remove(Integer.valueOf(min));
        }
        
        return sortedList;
    }

    public static List<Integer> secondWay(List<Integer> list) {
        for (int i = 0; i < list.size() - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < list.size(); j++) {
                if (list.get(j) < list.get(minIndex)) {
                    minIndex = j;
                }
            }
            
            Collections.swap(list, i, minIndex);
        }
        
        return list;
    }

}
